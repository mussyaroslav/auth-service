version: "3"

tasks:
  clear:
    aliases:
      - clear
    desc: "Clear terminal"
    silent: true
    cmds:
      - if [ {{eq OS "windows"}} ]; then
          cmd.exe /c cls;
        else
          clear;
        fi

  generate:
    aliases:
      - gen
    desc: "Generate code from proto files"
    silent: true
    cmds:
      - task: clear
      - echo 'Generate code from proto files...';
      - if [ {{eq OS "windows"}} ]; then
          protoc -I '.\api\proto' '.\api\proto\auth-service\*.proto' --go_out='.\generate' --go_opt=paths=source_relative --go-grpc_out='.\generate' --go-grpc_opt=paths=source_relative;
        else
          protoc -I ./api/proto ./api/proto/auth-service/*.proto --go_out=./generate --go_opt=paths=source_relative --go-grpc_out=./generate --go-grpc_opt=paths=source_relative;
        fi
      - echo 'SUCCESS';

  run:
    aliases:
      - run
    desc: "Build and run project with local config path"
    silent: true
    cmds:
      - task: clear
      - task: gen
      - echo 'Run project...';
      - if [ {{eq OS "windows"}} ]; then
          go run '.\cmd\auth-service\' -config=config.yml;
        else
          go run ./cmd/auth-service/ -config=config.yml;
        fi

  build:
    aliases:
      - build
    desc: "Build project"
    silent: true
    cmds:
      - task: gen
      - echo 'Build project...';
      - if [ {{eq OS "windows"}} ]; then
          go build -ldflags="-s -w" '.\cmd\auth-service\';
        else
          go build -ldflags="-s -w" ./cmd/auth-service/;
        fi
      - echo 'SUCCESS';

  start:
    aliases:
      - start
    desc: "Start project with local config path"
    silent: true
    cmds:
      - task: clear
      - echo 'Start project...';
      - if [ {{eq OS "windows"}} ]; then
        cmd.exe /c '.\auth-service.exe -config=config.yml';
        else
        ./auth-service -config=config.yml;
        fi
